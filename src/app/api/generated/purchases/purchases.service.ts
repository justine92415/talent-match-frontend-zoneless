/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Talent Match API
 * 全面重構後的 Talent Match 後端 API 文件
 * OpenAPI spec version: 2.0.0
 */
import { HttpClient } from '@angular/common/http';
import type {
  HttpContext,
  HttpEvent,
  HttpHeaders,
  HttpParams,
  HttpResponse as AngularHttpResponse,
} from '@angular/common/http';

import { Injectable, inject } from '@angular/core';

// import type { DeepNonNullable } from '@orval/core/src/utils/deep-non-nullable';

// 使用 TypeScript 內建的 NonNullable 型別
type DeepNonNullable<T> = T extends (...args: any[]) => any
  ? T
  : T extends any[]
  ? _DeepNonNullableArray<T[number]>
  : T extends object
  ? _DeepNonNullableObject<T>
  : NonNullable<T>;

type _DeepNonNullableArray<T> = Array<DeepNonNullable<NonNullable<T>>>;

type _DeepNonNullableObject<T> = {
  [P in keyof T]-?: DeepNonNullable<NonNullable<T[P]>>;
};

import { Observable } from 'rxjs';

import type {
  ConsumeCourseUsageRequest,
  CreatePurchaseFromOrderRequest,
  GetApiPurchases200,
  GetApiPurchasesCoursesCourseId200,
  GetApiPurchasesCoursesCourseIdCheck200,
  GetApiPurchasesId200,
  GetApiPurchasesParams,
  GetApiPurchasesSummary200,
  PostApiPurchasesCoursesCourseIdConsume200,
  PostApiPurchasesFromOrder201,
  PostApiPurchasesIdUse200,
  PostApiPurchasesIdUseBody,
} from '../talentMatchAPI.schemas';

interface HttpClientOptions {
  headers?: HttpHeaders | Record<string, string | string[]>;
  context?: HttpContext;
  params?:
    | HttpParams
    | Record<
        string,
        string | number | boolean | ReadonlyArray<string | number | boolean>
      >;
  reportProgress?: boolean;
  withCredentials?: boolean;
  credentials?: RequestCredentials;
  keepalive?: boolean;
  priority?: RequestPriority;
  cache?: RequestCache;
  mode?: RequestMode;
  redirect?: RequestRedirect;
  referrer?: string;
  integrity?: string;
  transferCache?: { includeHeaders?: string[] } | boolean;
  timeout?: number;
}

@Injectable({ providedIn: 'root' })
export class PurchasesService {
  private readonly http = inject(HttpClient);
  /**
   * 根據已付款的訂單建立對應的購買記錄，啟用課程存取權限
   * @summary 從訂單建立購買記錄
   */
  postApiPurchasesFromOrder<TData = PostApiPurchasesFromOrder201>(
    createPurchaseFromOrderRequest: CreatePurchaseFromOrderRequest,
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  postApiPurchasesFromOrder<TData = PostApiPurchasesFromOrder201>(
    createPurchaseFromOrderRequest: CreatePurchaseFromOrderRequest,
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  postApiPurchasesFromOrder<TData = PostApiPurchasesFromOrder201>(
    createPurchaseFromOrderRequest: CreatePurchaseFromOrderRequest,
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  postApiPurchasesFromOrder<TData = PostApiPurchasesFromOrder201>(
    createPurchaseFromOrderRequest: CreatePurchaseFromOrderRequest,
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.post<TData>(
      `/api/purchases/from-order`,
      createPurchaseFromOrderRequest,
      options,
    );
  }
  /**
   * 取得當前使用者的所有購買記錄，支援分頁和狀態篩選
   * @summary 取得使用者購買記錄列表
   */
  getApiPurchases<TData = GetApiPurchases200>(
    params?: DeepNonNullable<GetApiPurchasesParams>,
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  getApiPurchases<TData = GetApiPurchases200>(
    params?: DeepNonNullable<GetApiPurchasesParams>,
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  getApiPurchases<TData = GetApiPurchases200>(
    params?: DeepNonNullable<GetApiPurchasesParams>,
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  getApiPurchases<TData = GetApiPurchases200>(
    params?: DeepNonNullable<GetApiPurchasesParams>,
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.get<TData>(`/api/purchases`, {
      ...options,
      params: { ...params, ...options?.params },
    });
  }
  /**
   * 取得使用者對特定課程的所有購買記錄
   * @summary 取得特定課程的購買記錄
   */
  getApiPurchasesCoursesCourseId<TData = GetApiPurchasesCoursesCourseId200>(
    courseId: number,
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  getApiPurchasesCoursesCourseId<TData = GetApiPurchasesCoursesCourseId200>(
    courseId: number,
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  getApiPurchasesCoursesCourseId<TData = GetApiPurchasesCoursesCourseId200>(
    courseId: number,
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  getApiPurchasesCoursesCourseId<TData = GetApiPurchasesCoursesCourseId200>(
    courseId: number,
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.get<TData>(`/api/purchases/courses/${courseId}`, options);
  }
  /**
   * 消耗使用者對特定課程的購買次數，用於記錄課程使用情況
   * @summary 消耗課程使用次數
   */
  postApiPurchasesCoursesCourseIdConsume<
    TData = PostApiPurchasesCoursesCourseIdConsume200,
  >(
    courseId: number,
    consumeCourseUsageRequest?: ConsumeCourseUsageRequest,
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  postApiPurchasesCoursesCourseIdConsume<
    TData = PostApiPurchasesCoursesCourseIdConsume200,
  >(
    courseId: number,
    consumeCourseUsageRequest?: ConsumeCourseUsageRequest,
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  postApiPurchasesCoursesCourseIdConsume<
    TData = PostApiPurchasesCoursesCourseIdConsume200,
  >(
    courseId: number,
    consumeCourseUsageRequest?: ConsumeCourseUsageRequest,
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  postApiPurchasesCoursesCourseIdConsume<
    TData = PostApiPurchasesCoursesCourseIdConsume200,
  >(
    courseId: number,
    consumeCourseUsageRequest?: ConsumeCourseUsageRequest,
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.post<TData>(
      `/api/purchases/courses/${courseId}/consume`,
      consumeCourseUsageRequest,
      options,
    );
  }
  /**
   * 檢查使用者對特定課程的購買狀態和存取權限
   * @summary 檢查課程購買狀態
   */
  getApiPurchasesCoursesCourseIdCheck<
    TData = GetApiPurchasesCoursesCourseIdCheck200,
  >(
    courseId: number,
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  getApiPurchasesCoursesCourseIdCheck<
    TData = GetApiPurchasesCoursesCourseIdCheck200,
  >(
    courseId: number,
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  getApiPurchasesCoursesCourseIdCheck<
    TData = GetApiPurchasesCoursesCourseIdCheck200,
  >(
    courseId: number,
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  getApiPurchasesCoursesCourseIdCheck<
    TData = GetApiPurchasesCoursesCourseIdCheck200,
  >(
    courseId: number,
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.get<TData>(
      `/api/purchases/courses/${courseId}/check`,
      options,
    );
  }
  /**
   * 消耗指定購買記錄的使用次數
   * @summary 使用購買堂數
   */
  postApiPurchasesIdUse<TData = PostApiPurchasesIdUse200>(
    id: number,
    postApiPurchasesIdUseBody: PostApiPurchasesIdUseBody,
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  postApiPurchasesIdUse<TData = PostApiPurchasesIdUse200>(
    id: number,
    postApiPurchasesIdUseBody: PostApiPurchasesIdUseBody,
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  postApiPurchasesIdUse<TData = PostApiPurchasesIdUse200>(
    id: number,
    postApiPurchasesIdUseBody: PostApiPurchasesIdUseBody,
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  postApiPurchasesIdUse<TData = PostApiPurchasesIdUse200>(
    id: number,
    postApiPurchasesIdUseBody: PostApiPurchasesIdUseBody,
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.post<TData>(
      `/api/purchases/${id}/use`,
      postApiPurchasesIdUseBody,
      options,
    );
  }
  /**
   * 取得使用者的購買統計資料和摘要資訊
   * @summary 取得購買統計資料
   */
  getApiPurchasesSummary<TData = GetApiPurchasesSummary200>(
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  getApiPurchasesSummary<TData = GetApiPurchasesSummary200>(
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  getApiPurchasesSummary<TData = GetApiPurchasesSummary200>(
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  getApiPurchasesSummary<TData = GetApiPurchasesSummary200>(
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.get<TData>(`/api/purchases/summary`, options);
  }
  /**
   * 取得指定 ID 的購買記錄詳細資訊
   * @summary 取得單一購買記錄詳情
   */
  getApiPurchasesId<TData = GetApiPurchasesId200>(
    id: number,
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  getApiPurchasesId<TData = GetApiPurchasesId200>(
    id: number,
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  getApiPurchasesId<TData = GetApiPurchasesId200>(
    id: number,
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  getApiPurchasesId<TData = GetApiPurchasesId200>(
    id: number,
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.get<TData>(`/api/purchases/${id}`, options);
  }
}

export type PostApiPurchasesFromOrderClientResult =
  NonNullable<PostApiPurchasesFromOrder201>;
export type GetApiPurchasesClientResult = NonNullable<GetApiPurchases200>;
export type GetApiPurchasesCoursesCourseIdClientResult =
  NonNullable<GetApiPurchasesCoursesCourseId200>;
export type PostApiPurchasesCoursesCourseIdConsumeClientResult =
  NonNullable<PostApiPurchasesCoursesCourseIdConsume200>;
export type GetApiPurchasesCoursesCourseIdCheckClientResult =
  NonNullable<GetApiPurchasesCoursesCourseIdCheck200>;
export type PostApiPurchasesIdUseClientResult =
  NonNullable<PostApiPurchasesIdUse200>;
export type GetApiPurchasesSummaryClientResult =
  NonNullable<GetApiPurchasesSummary200>;
export type GetApiPurchasesIdClientResult = NonNullable<GetApiPurchasesId200>;
