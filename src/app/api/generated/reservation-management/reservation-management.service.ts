/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Talent Match API
 * 全面重構後的 Talent Match 後端 API 文件

🆕 v2.1 新功能：整合式課程建立 API，支援同時上傳圖片和設定價格方案
 * OpenAPI spec version: 2.1.0
 */
import { HttpClient } from '@angular/common/http';
import type {
  HttpContext,
  HttpEvent,
  HttpHeaders,
  HttpParams,
  HttpResponse as AngularHttpResponse,
} from '@angular/common/http';

import { Injectable, inject } from '@angular/core';

import { Observable } from 'rxjs';

import type {
  CreateReservationRequest,
  CreateReservationSuccessResponse,
} from '../talentMatchAPI.schemas';

interface HttpClientOptions {
  headers?: HttpHeaders | Record<string, string | string[]>;
  context?: HttpContext;
  params?:
    | HttpParams
    | Record<
        string,
        string | number | boolean | ReadonlyArray<string | number | boolean>
      >;
  reportProgress?: boolean;
  withCredentials?: boolean;
  credentials?: RequestCredentials;
  keepalive?: boolean;
  priority?: RequestPriority;
  cache?: RequestCache;
  mode?: RequestMode;
  redirect?: RequestRedirect;
  referrer?: string;
  integrity?: string;
  transferCache?: { includeHeaders?: string[] } | boolean;
  timeout?: number;
}

@Injectable({ providedIn: 'root' })
export class ReservationManagementService {
  private readonly http = inject(HttpClient);
  /**
 * 學生建立課程預約，系統會驗證學生購買記錄、教師可預約時段、時間衝突等條件。

**業務邏輯**：
- 驗證學生身份認證
- 驗證學生是否有該課程的購買記錄和剩餘堂數
- 驗證教師在指定日期時間是否有可預約時段
- 檢查時間衝突（教師該時段是否已被預約）
- 建立預約記錄並扣除一堂課
- 同時設定教師和學生狀態為 "reserved"
- 回傳預約詳情和剩餘堂數資訊

 * @summary 建立預約
 */
  postApiReservations<TData = CreateReservationSuccessResponse>(
    createReservationRequest: CreateReservationRequest,
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  postApiReservations<TData = CreateReservationSuccessResponse>(
    createReservationRequest: CreateReservationRequest,
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  postApiReservations<TData = CreateReservationSuccessResponse>(
    createReservationRequest: CreateReservationRequest,
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  postApiReservations<TData = CreateReservationSuccessResponse>(
    createReservationRequest: CreateReservationRequest,
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.post<TData>(
      `/api/reservations`,
      createReservationRequest,
      options,
    );
  }
}

export type PostApiReservationsClientResult =
  NonNullable<CreateReservationSuccessResponse>;
