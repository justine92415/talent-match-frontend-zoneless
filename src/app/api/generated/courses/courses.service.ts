/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Talent Match API
 * 全面重構後的 Talent Match 後端 API 文件

🆕 v2.1 新功能：整合式課程建立 API，支援同時上傳圖片和設定價格方案
 * OpenAPI spec version: 2.1.0
 */
import { HttpClient } from '@angular/common/http';
import type {
  HttpContext,
  HttpEvent,
  HttpHeaders,
  HttpParams,
  HttpResponse as AngularHttpResponse,
} from '@angular/common/http';

import { Injectable, inject } from '@angular/core';

// import type { DeepNonNullable } from '@orval/core/src/utils/deep-non-nullable';

// 使用 TypeScript 內建的 NonNullable 型別
type DeepNonNullable<T> = T extends (...args: any[]) => any
  ? T
  : T extends any[]
  ? _DeepNonNullableArray<T[number]>
  : T extends object
  ? _DeepNonNullableObject<T>
  : NonNullable<T>;

type _DeepNonNullableArray<T> = Array<DeepNonNullable<NonNullable<T>>>;

type _DeepNonNullableObject<T> = {
  [P in keyof T]-?: DeepNonNullable<NonNullable<T[P]>>;
};

import { Observable } from 'rxjs';

import type {
  GetApiCoursesIdAvailableSlotsParams,
  GetAvailableSlotsSuccessResponse,
} from '../talentMatchAPI.schemas';

interface HttpClientOptions {
  headers?: HttpHeaders | Record<string, string | string[]>;
  context?: HttpContext;
  params?:
    | HttpParams
    | Record<
        string,
        string | number | boolean | ReadonlyArray<string | number | boolean>
      >;
  reportProgress?: boolean;
  withCredentials?: boolean;
  credentials?: RequestCredentials;
  keepalive?: boolean;
  priority?: RequestPriority;
  cache?: RequestCache;
  mode?: RequestMode;
  redirect?: RequestRedirect;
  referrer?: string;
  integrity?: string;
  transferCache?: { includeHeaders?: string[] } | boolean;
  timeout?: number;
}

@Injectable({ providedIn: 'root' })
export class CoursesService {
  private readonly http = inject(HttpClient);
  /**
 * 查詢指定課程在特定日期的可預約時段列表。

**業務邏輯**：
- 驗證課程是否存在
- 檢查課程狀態 (只有已發布的課程可以預約)
- 計算查詢日期對應的星期幾
- 查詢教師在該星期幾的可預約時段設定
- 排除已被預約的時段 (檢查預約狀態為 RESERVED)
- 按時間順序返回可預約時段列表

**使用情境**：
- 學生選擇日期後查詢該日可預約的時段
- 前端日曆組件顯示可選時段
- 預約流程的第一步：時段選擇

 * @summary 查詢課程可預約時段
 */
  getApiCoursesIdAvailableSlots<TData = GetAvailableSlotsSuccessResponse>(
    id: number,
    params: DeepNonNullable<GetApiCoursesIdAvailableSlotsParams>,
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  getApiCoursesIdAvailableSlots<TData = GetAvailableSlotsSuccessResponse>(
    id: number,
    params: DeepNonNullable<GetApiCoursesIdAvailableSlotsParams>,
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  getApiCoursesIdAvailableSlots<TData = GetAvailableSlotsSuccessResponse>(
    id: number,
    params: DeepNonNullable<GetApiCoursesIdAvailableSlotsParams>,
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  getApiCoursesIdAvailableSlots<TData = GetAvailableSlotsSuccessResponse>(
    id: number,
    params: DeepNonNullable<GetApiCoursesIdAvailableSlotsParams>,
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.get<TData>(`/api/courses/${id}/available-slots`, {
      ...options,
      params: { ...params, ...options?.params },
    });
  }
}

export type GetApiCoursesIdAvailableSlotsClientResult =
  NonNullable<GetAvailableSlotsSuccessResponse>;
