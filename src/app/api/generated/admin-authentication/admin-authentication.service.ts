/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Talent Match API
 * 全面重構後的 Talent Match 後端 API 文件
 * OpenAPI spec version: 2.0.0
 */
import { HttpClient } from '@angular/common/http';
import type {
  HttpContext,
  HttpEvent,
  HttpHeaders,
  HttpParams,
  HttpResponse as AngularHttpResponse,
} from '@angular/common/http';

import { Injectable, inject } from '@angular/core';

import { Observable } from 'rxjs';

import type {
  AdminLoginRequest,
  AdminLoginResponse,
  PostApiAdminLogout200,
} from '../talentMatchAPI.schemas';

interface HttpClientOptions {
  headers?: HttpHeaders | Record<string, string | string[]>;
  context?: HttpContext;
  params?:
    | HttpParams
    | Record<
        string,
        string | number | boolean | ReadonlyArray<string | number | boolean>
      >;
  reportProgress?: boolean;
  withCredentials?: boolean;
  credentials?: RequestCredentials;
  keepalive?: boolean;
  priority?: RequestPriority;
  cache?: RequestCache;
  mode?: RequestMode;
  redirect?: RequestRedirect;
  referrer?: string;
  integrity?: string;
  transferCache?: { includeHeaders?: string[] } | boolean;
  timeout?: number;
}

@Injectable({ providedIn: 'root' })
export class AdminAuthenticationService {
  private readonly http = inject(HttpClient);
  /**
 * 管理員登入系統，用於取得管理權限。

**安全特性：**
- 驗證管理員帳號和密碼
- 檢查帳號是否為啟用狀態
- 產生 JWT access token 和 refresh token
- 記錄登入時間

**業務規則：**
- 只有啟用的管理員帳號可以登入
- 登入成功後更新最後登入時間
- Token 具有時效性，需要定期刷新

 * @summary 管理員登入
 */
  postApiAdminLogin<TData = AdminLoginResponse>(
    adminLoginRequest: AdminLoginRequest,
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  postApiAdminLogin<TData = AdminLoginResponse>(
    adminLoginRequest: AdminLoginRequest,
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  postApiAdminLogin<TData = AdminLoginResponse>(
    adminLoginRequest: AdminLoginRequest,
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  postApiAdminLogin<TData = AdminLoginResponse>(
    adminLoginRequest: AdminLoginRequest,
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.post<TData>(
      `/api/admin/login`,
      adminLoginRequest,
      options,
    );
  }
  /**
   * 管理員登出系統，清除登入狀態
   * @summary 管理員登出
   */
  postApiAdminLogout<TData = PostApiAdminLogout200>(
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  postApiAdminLogout<TData = PostApiAdminLogout200>(
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  postApiAdminLogout<TData = PostApiAdminLogout200>(
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  postApiAdminLogout<TData = PostApiAdminLogout200>(
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.post<TData>(`/api/admin/logout`, undefined, options);
  }
}

export type PostApiAdminLoginClientResult = NonNullable<AdminLoginResponse>;
export type PostApiAdminLogoutClientResult = NonNullable<PostApiAdminLogout200>;
