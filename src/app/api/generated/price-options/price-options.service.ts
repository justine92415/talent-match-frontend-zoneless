/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Talent Match API
 * 全面重構後的 Talent Match 後端 API 文件

🆕 v2.1 新功能：整合式課程建立 API，支援同時上傳圖片和設定價格方案
 * OpenAPI spec version: 2.1.0
 */
import { HttpClient } from '@angular/common/http';
import type {
  HttpContext,
  HttpEvent,
  HttpHeaders,
  HttpParams,
  HttpResponse as AngularHttpResponse,
} from '@angular/common/http';

import { Injectable, inject } from '@angular/core';

import { Observable } from 'rxjs';

import type {
  GetApiCoursesCourseIdPriceOptions200,
  PostApiCoursesCourseIdPriceOptions201,
  PriceOptionCreateRequest,
  PriceOptionUpdateRequest,
  PutApiCoursesCourseIdPriceOptionsId200,
  SuccessResponse,
} from '../talentMatchAPI.schemas';

interface HttpClientOptions {
  headers?: HttpHeaders | Record<string, string | string[]>;
  context?: HttpContext;
  params?:
    | HttpParams
    | Record<
        string,
        string | number | boolean | ReadonlyArray<string | number | boolean>
      >;
  reportProgress?: boolean;
  withCredentials?: boolean;
  credentials?: RequestCredentials;
  keepalive?: boolean;
  priority?: RequestPriority;
  cache?: RequestCache;
  mode?: RequestMode;
  redirect?: RequestRedirect;
  referrer?: string;
  integrity?: string;
  transferCache?: { includeHeaders?: string[] } | boolean;
  timeout?: number;
}

@Injectable({ providedIn: 'root' })
export class PriceOptionsService {
  private readonly http = inject(HttpClient);
  /**
 * 取得指定課程的所有價格方案。
只有課程擁有者（教師）可以查看價格方案。

**權限要求：**
- 需要教師身份認證
- 只能查看自己課程的價格方案

 * @summary 取得課程價格方案列表
 */
  getApiCoursesCourseIdPriceOptions<
    TData = GetApiCoursesCourseIdPriceOptions200,
  >(
    courseId: number,
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  getApiCoursesCourseIdPriceOptions<
    TData = GetApiCoursesCourseIdPriceOptions200,
  >(
    courseId: number,
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  getApiCoursesCourseIdPriceOptions<
    TData = GetApiCoursesCourseIdPriceOptions200,
  >(
    courseId: number,
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  getApiCoursesCourseIdPriceOptions<
    TData = GetApiCoursesCourseIdPriceOptions200,
  >(
    courseId: number,
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.get<TData>(
      `/api/courses/${courseId}/price-options`,
      options,
    );
  }
  /**
 * 為指定課程建立新的價格方案。
只有課程擁有者（教師）可以建立價格方案。

**業務規則：**
- 價格範圍：1 ~ 999,999 元
- 堂數範圍：1 ~ 999 堂
- 價格支援小數點後兩位
- 每個課程最多可建立多個價格方案

**權限要求：**
- 需要教師身份認證
- 只能為自己的課程建立價格方案

 * @summary 建立課程價格方案
 */
  postApiCoursesCourseIdPriceOptions<
    TData = PostApiCoursesCourseIdPriceOptions201,
  >(
    courseId: number,
    priceOptionCreateRequest: PriceOptionCreateRequest,
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  postApiCoursesCourseIdPriceOptions<
    TData = PostApiCoursesCourseIdPriceOptions201,
  >(
    courseId: number,
    priceOptionCreateRequest: PriceOptionCreateRequest,
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  postApiCoursesCourseIdPriceOptions<
    TData = PostApiCoursesCourseIdPriceOptions201,
  >(
    courseId: number,
    priceOptionCreateRequest: PriceOptionCreateRequest,
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  postApiCoursesCourseIdPriceOptions<
    TData = PostApiCoursesCourseIdPriceOptions201,
  >(
    courseId: number,
    priceOptionCreateRequest: PriceOptionCreateRequest,
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.post<TData>(
      `/api/courses/${courseId}/price-options`,
      priceOptionCreateRequest,
      options,
    );
  }
  /**
 * 更新指定課程的價格方案資訊。
只有課程擁有者（教師）可以更新價格方案。

**業務規則：**
- 可部分更新欄位
- 至少需要提供一個要更新的欄位
- 價格和堂數驗證規則與建立時相同

**權限要求：**
- 需要教師身份認證
- 只能更新自己課程的價格方案

 * @summary 更新課程價格方案
 */
  putApiCoursesCourseIdPriceOptionsId<
    TData = PutApiCoursesCourseIdPriceOptionsId200,
  >(
    courseId: number,
    id: number,
    priceOptionUpdateRequest: PriceOptionUpdateRequest,
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  putApiCoursesCourseIdPriceOptionsId<
    TData = PutApiCoursesCourseIdPriceOptionsId200,
  >(
    courseId: number,
    id: number,
    priceOptionUpdateRequest: PriceOptionUpdateRequest,
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  putApiCoursesCourseIdPriceOptionsId<
    TData = PutApiCoursesCourseIdPriceOptionsId200,
  >(
    courseId: number,
    id: number,
    priceOptionUpdateRequest: PriceOptionUpdateRequest,
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  putApiCoursesCourseIdPriceOptionsId<
    TData = PutApiCoursesCourseIdPriceOptionsId200,
  >(
    courseId: number,
    id: number,
    priceOptionUpdateRequest: PriceOptionUpdateRequest,
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.put<TData>(
      `/api/courses/${courseId}/price-options/${id}`,
      priceOptionUpdateRequest,
      options,
    );
  }
  /**
 * 刪除指定課程的價格方案。
只有課程擁有者（教師）可以刪除價格方案。

**業務規則：**
- 如果價格方案已有訂單，將不允許刪除
- 刪除是永久性的，無法恢復
- 至少需要保留一個價格方案

**權限要求：**
- 需要教師身份認證
- 只能刪除自己課程的價格方案

 * @summary 刪除課程價格方案
 */
  deleteApiCoursesCourseIdPriceOptionsId<TData = SuccessResponse>(
    courseId: number,
    id: number,
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  deleteApiCoursesCourseIdPriceOptionsId<TData = SuccessResponse>(
    courseId: number,
    id: number,
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  deleteApiCoursesCourseIdPriceOptionsId<TData = SuccessResponse>(
    courseId: number,
    id: number,
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  deleteApiCoursesCourseIdPriceOptionsId<TData = SuccessResponse>(
    courseId: number,
    id: number,
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.delete<TData>(
      `/api/courses/${courseId}/price-options/${id}`,
      options,
    );
  }
}

export type GetApiCoursesCourseIdPriceOptionsClientResult =
  NonNullable<GetApiCoursesCourseIdPriceOptions200>;
export type PostApiCoursesCourseIdPriceOptionsClientResult =
  NonNullable<PostApiCoursesCourseIdPriceOptions201>;
export type PutApiCoursesCourseIdPriceOptionsIdClientResult =
  NonNullable<PutApiCoursesCourseIdPriceOptionsId200>;
export type DeleteApiCoursesCourseIdPriceOptionsIdClientResult =
  NonNullable<SuccessResponse>;
