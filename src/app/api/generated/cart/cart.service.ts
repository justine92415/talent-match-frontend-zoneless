/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Talent Match API
 * 全面重構後的 Talent Match 後端 API 文件
 * OpenAPI spec version: 2.0.0
 */
import { HttpClient } from '@angular/common/http';
import type {
  HttpContext,
  HttpEvent,
  HttpHeaders,
  HttpParams,
  HttpResponse as AngularHttpResponse,
} from '@angular/common/http';

import { Injectable, inject } from '@angular/core';

import { Observable } from 'rxjs';

import type {
  AddItemToCartRequest,
  DeleteApiCart200,
  DeleteApiCartItemsItemId200,
  GetApiCart200,
  PostApiCartItems201,
  PutApiCartItemsItemId200,
  UpdateCartItemRequest,
} from '../talentMatchAPI.schemas';

interface HttpClientOptions {
  headers?: HttpHeaders | Record<string, string | string[]>;
  context?: HttpContext;
  params?:
    | HttpParams
    | Record<
        string,
        string | number | boolean | ReadonlyArray<string | number | boolean>
      >;
  reportProgress?: boolean;
  withCredentials?: boolean;
  credentials?: RequestCredentials;
  keepalive?: boolean;
  priority?: RequestPriority;
  cache?: RequestCache;
  mode?: RequestMode;
  redirect?: RequestRedirect;
  referrer?: string;
  integrity?: string;
  transferCache?: { includeHeaders?: string[] } | boolean;
  timeout?: number;
}

@Injectable({ providedIn: 'root' })
export class CartService {
  private readonly http = inject(HttpClient);
  /**
   * 將課程商品加入使用者的購物車，如果已存在相同課程和價格方案會增加數量
   * @summary 加入商品到購物車
   */
  postApiCartItems<TData = PostApiCartItems201>(
    addItemToCartRequest: AddItemToCartRequest,
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  postApiCartItems<TData = PostApiCartItems201>(
    addItemToCartRequest: AddItemToCartRequest,
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  postApiCartItems<TData = PostApiCartItems201>(
    addItemToCartRequest: AddItemToCartRequest,
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  postApiCartItems<TData = PostApiCartItems201>(
    addItemToCartRequest: AddItemToCartRequest,
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.post<TData>(
      `/api/cart/items`,
      addItemToCartRequest,
      options,
    );
  }
  /**
   * 取得當前使用者的購物車所有商品和統計資訊
   * @summary 取得購物車內容
   */
  getApiCart<TData = GetApiCart200>(
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  getApiCart<TData = GetApiCart200>(
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  getApiCart<TData = GetApiCart200>(
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  getApiCart<TData = GetApiCart200>(
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.get<TData>(`/api/cart`, options);
  }
  /**
   * 移除購物車中的所有商品項目
   * @summary 清空購物車
   */
  deleteApiCart<TData = DeleteApiCart200>(
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  deleteApiCart<TData = DeleteApiCart200>(
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  deleteApiCart<TData = DeleteApiCart200>(
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  deleteApiCart<TData = DeleteApiCart200>(
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.delete<TData>(`/api/cart`, options);
  }
  /**
   * 更新購物車中指定商品的數量或價格方案
   * @summary 更新購物車商品
   */
  putApiCartItemsItemId<TData = PutApiCartItemsItemId200>(
    itemId: number,
    updateCartItemRequest: UpdateCartItemRequest,
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  putApiCartItemsItemId<TData = PutApiCartItemsItemId200>(
    itemId: number,
    updateCartItemRequest: UpdateCartItemRequest,
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  putApiCartItemsItemId<TData = PutApiCartItemsItemId200>(
    itemId: number,
    updateCartItemRequest: UpdateCartItemRequest,
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  putApiCartItemsItemId<TData = PutApiCartItemsItemId200>(
    itemId: number,
    updateCartItemRequest: UpdateCartItemRequest,
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.put<TData>(
      `/api/cart/items/${itemId}`,
      updateCartItemRequest,
      options,
    );
  }
  /**
   * 從購物車中移除指定的商品項目
   * @summary 移除購物車商品
   */
  deleteApiCartItemsItemId<TData = DeleteApiCartItemsItemId200>(
    itemId: number,
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  deleteApiCartItemsItemId<TData = DeleteApiCartItemsItemId200>(
    itemId: number,
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  deleteApiCartItemsItemId<TData = DeleteApiCartItemsItemId200>(
    itemId: number,
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  deleteApiCartItemsItemId<TData = DeleteApiCartItemsItemId200>(
    itemId: number,
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.delete<TData>(`/api/cart/items/${itemId}`, options);
  }
}

export type PostApiCartItemsClientResult = NonNullable<PostApiCartItems201>;
export type GetApiCartClientResult = NonNullable<GetApiCart200>;
export type DeleteApiCartClientResult = NonNullable<DeleteApiCart200>;
export type PutApiCartItemsItemIdClientResult =
  NonNullable<PutApiCartItemsItemId200>;
export type DeleteApiCartItemsItemIdClientResult =
  NonNullable<DeleteApiCartItemsItemId200>;
