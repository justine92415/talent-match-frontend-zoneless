/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Talent Match API
 * 全面重構後的 Talent Match 後端 API 文件
 * OpenAPI spec version: 2.0.0
 */
import { HttpClient } from '@angular/common/http';
import type {
  HttpContext,
  HttpEvent,
  HttpHeaders,
  HttpParams,
  HttpResponse as AngularHttpResponse,
} from '@angular/common/http';

import { Injectable, inject } from '@angular/core';

// import type { DeepNonNullable } from '@orval/core/src/utils/deep-non-nullable';

// 使用 TypeScript 內建的 NonNullable 型別
type DeepNonNullable<T> = T extends (...args: any[]) => any
  ? T
  : T extends any[]
  ? _DeepNonNullableArray<T[number]>
  : T extends object
  ? _DeepNonNullableObject<T>
  : NonNullable<T>;

type _DeepNonNullableArray<T> = Array<DeepNonNullable<NonNullable<T>>>;

type _DeepNonNullableObject<T> = {
  [P in keyof T]-?: DeepNonNullable<NonNullable<T[P]>>;
};

import { Observable } from 'rxjs';

import type {
  CreateOrderRequest,
  GetApiOrders200,
  GetApiOrdersOrderId200,
  GetApiOrdersParams,
  PostApiOrders201,
  PostApiOrdersOrderIdCancel200,
  PostApiOrdersOrderIdCancelBody,
  PostApiOrdersOrderIdPayment200,
  PostApiOrdersOrderIdPaymentBody,
  PutApiOrdersOrderIdCancel200,
  PutApiOrdersOrderIdCancelBody,
} from '../talentMatchAPI.schemas';

interface HttpClientOptions {
  headers?: HttpHeaders | Record<string, string | string[]>;
  context?: HttpContext;
  params?:
    | HttpParams
    | Record<
        string,
        string | number | boolean | ReadonlyArray<string | number | boolean>
      >;
  reportProgress?: boolean;
  withCredentials?: boolean;
  credentials?: RequestCredentials;
  keepalive?: boolean;
  priority?: RequestPriority;
  cache?: RequestCache;
  mode?: RequestMode;
  redirect?: RequestRedirect;
  referrer?: string;
  integrity?: string;
  transferCache?: { includeHeaders?: string[] } | boolean;
  timeout?: number;
}

@Injectable({ providedIn: 'root' })
export class OrdersService {
  private readonly http = inject(HttpClient);
  /**
   * 將使用者購物車中的所有商品建立為新訂單，購物車會被清空
   * @summary 從購物車建立訂單
   */
  postApiOrders<TData = PostApiOrders201>(
    createOrderRequest?: CreateOrderRequest,
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  postApiOrders<TData = PostApiOrders201>(
    createOrderRequest?: CreateOrderRequest,
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  postApiOrders<TData = PostApiOrders201>(
    createOrderRequest?: CreateOrderRequest,
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  postApiOrders<TData = PostApiOrders201>(
    createOrderRequest?: CreateOrderRequest,
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.post<TData>(`/api/orders`, createOrderRequest, options);
  }
  /**
   * 取得當前使用者的所有訂單列表，支援分頁和狀態篩選
   * @summary 取得使用者訂單列表
   */
  getApiOrders<TData = GetApiOrders200>(
    params?: DeepNonNullable<GetApiOrdersParams>,
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  getApiOrders<TData = GetApiOrders200>(
    params?: DeepNonNullable<GetApiOrdersParams>,
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  getApiOrders<TData = GetApiOrders200>(
    params?: DeepNonNullable<GetApiOrdersParams>,
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  getApiOrders<TData = GetApiOrders200>(
    params?: DeepNonNullable<GetApiOrdersParams>,
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.get<TData>(`/api/orders`, {
      ...options,
      params: { ...params, ...options?.params },
    });
  }
  /**
   * 取得指定訂單的完整資訊，包含所有商品項目詳情
   * @summary 取得訂單詳情
   */
  getApiOrdersOrderId<TData = GetApiOrdersOrderId200>(
    orderId: number,
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  getApiOrdersOrderId<TData = GetApiOrdersOrderId200>(
    orderId: number,
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  getApiOrdersOrderId<TData = GetApiOrdersOrderId200>(
    orderId: number,
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  getApiOrdersOrderId<TData = GetApiOrdersOrderId200>(
    orderId: number,
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.get<TData>(`/api/orders/${orderId}`, options);
  }
  /**
   * 取消指定的訂單，只有處於待確認狀態的訂單可以被取消
   * @summary 取消訂單
   */
  putApiOrdersOrderIdCancel<TData = PutApiOrdersOrderIdCancel200>(
    orderId: number,
    putApiOrdersOrderIdCancelBody?: PutApiOrdersOrderIdCancelBody,
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  putApiOrdersOrderIdCancel<TData = PutApiOrdersOrderIdCancel200>(
    orderId: number,
    putApiOrdersOrderIdCancelBody?: PutApiOrdersOrderIdCancelBody,
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  putApiOrdersOrderIdCancel<TData = PutApiOrdersOrderIdCancel200>(
    orderId: number,
    putApiOrdersOrderIdCancelBody?: PutApiOrdersOrderIdCancelBody,
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  putApiOrdersOrderIdCancel<TData = PutApiOrdersOrderIdCancel200>(
    orderId: number,
    putApiOrdersOrderIdCancelBody?: PutApiOrdersOrderIdCancelBody,
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.put<TData>(
      `/api/orders/${orderId}/cancel`,
      putApiOrdersOrderIdCancelBody,
      options,
    );
  }
  /**
   * 取消指定的訂單，只有處於待確認狀態的訂單可以被取消
   * @summary 取消訂單 (POST方法)
   */
  postApiOrdersOrderIdCancel<TData = PostApiOrdersOrderIdCancel200>(
    orderId: number,
    postApiOrdersOrderIdCancelBody?: PostApiOrdersOrderIdCancelBody,
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  postApiOrdersOrderIdCancel<TData = PostApiOrdersOrderIdCancel200>(
    orderId: number,
    postApiOrdersOrderIdCancelBody?: PostApiOrdersOrderIdCancelBody,
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  postApiOrdersOrderIdCancel<TData = PostApiOrdersOrderIdCancel200>(
    orderId: number,
    postApiOrdersOrderIdCancelBody?: PostApiOrdersOrderIdCancelBody,
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  postApiOrdersOrderIdCancel<TData = PostApiOrdersOrderIdCancel200>(
    orderId: number,
    postApiOrdersOrderIdCancelBody?: PostApiOrdersOrderIdCancelBody,
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.post<TData>(
      `/api/orders/${orderId}/cancel`,
      postApiOrdersOrderIdCancelBody,
      options,
    );
  }
  /**
   * 處理指定訂單的付款流程
   * @summary 處理訂單付款
   */
  postApiOrdersOrderIdPayment<TData = PostApiOrdersOrderIdPayment200>(
    orderId: number,
    postApiOrdersOrderIdPaymentBody: PostApiOrdersOrderIdPaymentBody,
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  postApiOrdersOrderIdPayment<TData = PostApiOrdersOrderIdPayment200>(
    orderId: number,
    postApiOrdersOrderIdPaymentBody: PostApiOrdersOrderIdPaymentBody,
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  postApiOrdersOrderIdPayment<TData = PostApiOrdersOrderIdPayment200>(
    orderId: number,
    postApiOrdersOrderIdPaymentBody: PostApiOrdersOrderIdPaymentBody,
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  postApiOrdersOrderIdPayment<TData = PostApiOrdersOrderIdPayment200>(
    orderId: number,
    postApiOrdersOrderIdPaymentBody: PostApiOrdersOrderIdPaymentBody,
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.post<TData>(
      `/api/orders/${orderId}/payment`,
      postApiOrdersOrderIdPaymentBody,
      options,
    );
  }
}

export type PostApiOrdersClientResult = NonNullable<PostApiOrders201>;
export type GetApiOrdersClientResult = NonNullable<GetApiOrders200>;
export type GetApiOrdersOrderIdClientResult =
  NonNullable<GetApiOrdersOrderId200>;
export type PutApiOrdersOrderIdCancelClientResult =
  NonNullable<PutApiOrdersOrderIdCancel200>;
export type PostApiOrdersOrderIdCancelClientResult =
  NonNullable<PostApiOrdersOrderIdCancel200>;
export type PostApiOrdersOrderIdPaymentClientResult =
  NonNullable<PostApiOrdersOrderIdPayment200>;
