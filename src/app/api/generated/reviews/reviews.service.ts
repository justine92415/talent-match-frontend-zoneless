/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Talent Match API
 * 全面重構後的 Talent Match 後端 API 文件

🆕 v2.1 新功能：整合式課程建立 API，支援同時上傳圖片和設定價格方案
 * OpenAPI spec version: 2.1.0
 */
import { HttpClient } from '@angular/common/http';
import type {
  HttpContext,
  HttpEvent,
  HttpHeaders,
  HttpParams,
  HttpResponse as AngularHttpResponse,
} from '@angular/common/http';

import { Injectable, inject } from '@angular/core';

import { Observable } from 'rxjs';

import type {
  ReviewSubmitRequest,
  ReviewSubmitSuccessResponse,
} from '../talentMatchAPI.schemas';

interface HttpClientOptions {
  headers?: HttpHeaders | Record<string, string | string[]>;
  context?: HttpContext;
  params?:
    | HttpParams
    | Record<
        string,
        string | number | boolean | ReadonlyArray<string | number | boolean>
      >;
  reportProgress?: boolean;
  withCredentials?: boolean;
  credentials?: RequestCredentials;
  keepalive?: boolean;
  priority?: RequestPriority;
  cache?: RequestCache;
  mode?: RequestMode;
  redirect?: RequestRedirect;
  referrer?: string;
  integrity?: string;
  transferCache?: { includeHeaders?: string[] } | boolean;
  timeout?: number;
}

@Injectable({ providedIn: 'root' })
export class ReviewsService {
  private readonly http = inject(HttpClient);
  /**
 * 學生在完成預約課程後提交評價。

**業務邏輯**：
- 驗證請求參數（預約 UUID、評分、評語）
- 確認預約屬於當前學生且雙方狀態皆為完成
- 防止重複評價同一預約
- 建立評價並更新課程與教師的評分統計

 * @summary 提交課程評價
 */
  postApiReviews<TData = ReviewSubmitSuccessResponse>(
    reviewSubmitRequest: ReviewSubmitRequest,
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  postApiReviews<TData = ReviewSubmitSuccessResponse>(
    reviewSubmitRequest: ReviewSubmitRequest,
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  postApiReviews<TData = ReviewSubmitSuccessResponse>(
    reviewSubmitRequest: ReviewSubmitRequest,
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  postApiReviews<TData = ReviewSubmitSuccessResponse>(
    reviewSubmitRequest: ReviewSubmitRequest,
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.post<TData>(`/api/reviews`, reviewSubmitRequest, options);
  }
}

export type PostApiReviewsClientResult =
  NonNullable<ReviewSubmitSuccessResponse>;
