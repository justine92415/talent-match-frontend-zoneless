/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Talent Match API
 * 全面重構後的 Talent Match 後端 API 文件
 * OpenAPI spec version: 2.0.0
 */
export interface UserProfile {
  /** 使用者 ID */
  id?: number;
  /** 使用者 UUID */
  uuid?: string;
  /**
   * Google ID (第三方登入)
   * @nullable
   */
  google_id?: string | null;
  /**
   * 真實姓名
   * @nullable
   */
  name?: string | null;
  /** 暱稱 */
  nick_name?: string;
  /** 電子郵件 */
  email?: string;
  /**
   * 生日
   * @nullable
   */
  birthday?: string | null;
  /**
   * 聯絡電話
   * @nullable
   */
  contact_phone?: string | null;
  /**
   * 頭像圖片 URL
   * @nullable
   */
  avatar_image?: string | null;
  /**
   * Google 頭像 URL
   * @nullable
   */
  avatar_google_url?: string | null;
  /** 帳號狀態 */
  account_status?: string;
  /**
   * 最後登入時間
   * @nullable
   */
  last_login_at?: string | null;
  /** 建立時間 */
  created_at?: string;
  /** 更新時間 */
  updated_at?: string;
  /**
   * 刪除時間 (軟刪除)
   * @nullable
   */
  deleted_at?: string | null;
}

/**
 * 回應狀態
 */
export type ValidationErrorResponseStatus =
  (typeof ValidationErrorResponseStatus)[keyof typeof ValidationErrorResponseStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ValidationErrorResponseStatus = {
  error: 'error',
} as const;

/**
 * 詳細驗證錯誤資訊
 */
export type ValidationErrorResponseErrors = { [key: string]: string[] };

export interface ValidationErrorResponse {
  /** 回應狀態 */
  status?: ValidationErrorResponseStatus;
  /** 錯誤訊息 */
  message?: string;
  /** 詳細驗證錯誤資訊 */
  errors?: ValidationErrorResponseErrors;
}

/**
 * 回應狀態
 */
export type UnauthorizedErrorResponseStatus =
  (typeof UnauthorizedErrorResponseStatus)[keyof typeof UnauthorizedErrorResponseStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const UnauthorizedErrorResponseStatus = {
  error: 'error',
} as const;

export interface UnauthorizedErrorResponse {
  /** 回應狀態 */
  status?: UnauthorizedErrorResponseStatus;
  /** 錯誤訊息 */
  message?: string;
}

/**
 * 回應狀態
 */
export type ForbiddenErrorResponseStatus =
  (typeof ForbiddenErrorResponseStatus)[keyof typeof ForbiddenErrorResponseStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ForbiddenErrorResponseStatus = {
  error: 'error',
} as const;

export interface ForbiddenErrorResponse {
  /** 回應狀態 */
  status?: ForbiddenErrorResponseStatus;
  /** 錯誤訊息 */
  message?: string;
}

/**
 * 回應狀態
 */
export type NotFoundErrorResponseStatus =
  (typeof NotFoundErrorResponseStatus)[keyof typeof NotFoundErrorResponseStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const NotFoundErrorResponseStatus = {
  error: 'error',
} as const;

export interface NotFoundErrorResponse {
  /** 回應狀態 */
  status?: NotFoundErrorResponseStatus;
  /** 錯誤訊息 */
  message?: string;
}

/**
 * 回應狀態
 */
export type BusinessErrorResponseStatus =
  (typeof BusinessErrorResponseStatus)[keyof typeof BusinessErrorResponseStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const BusinessErrorResponseStatus = {
  error: 'error',
} as const;

export interface BusinessErrorResponse {
  /** 回應狀態 */
  status?: BusinessErrorResponseStatus;
  /** 錯誤訊息 */
  message?: string;
}

/**
 * 回應狀態
 */
export type ServerErrorResponseStatus =
  (typeof ServerErrorResponseStatus)[keyof typeof ServerErrorResponseStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ServerErrorResponseStatus = {
  error: 'error',
} as const;

export interface ServerErrorResponse {
  /** 回應狀態 */
  status?: ServerErrorResponseStatus;
  /** 錯誤訊息 */
  message?: string;
}

export interface ResetPasswordRequest {
  /** 重設密碼 Token */
  token: string;
  /**
   * 新密碼（至少8字元）
   * @minLength 8
   */
  new_password: string;
}

/**
 * 回應狀態
 */
export type ResetPasswordSuccessResponseStatus =
  (typeof ResetPasswordSuccessResponseStatus)[keyof typeof ResetPasswordSuccessResponseStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ResetPasswordSuccessResponseStatus = {
  success: 'success',
} as const;

export interface ResetPasswordSuccessResponse {
  /** 回應狀態 */
  status?: ResetPasswordSuccessResponseStatus;
  /** 成功訊息 */
  message?: string;
  /** 回應資料（此 API 無回傳資料） */
  data?: null;
}

export type ResetPasswordValidationErrorResponseAllOf = {
  message?: unknown;
  errors?: unknown;
};

export type ResetPasswordValidationErrorResponse = ValidationErrorResponse &
  ResetPasswordValidationErrorResponseAllOf;

export type ResetPasswordBusinessErrorResponseAllOf = {
  message?: unknown;
};

export type ResetPasswordBusinessErrorResponse = BusinessErrorResponse &
  ResetPasswordBusinessErrorResponseAllOf;

export interface ForgotPasswordRequest {
  /**
   * 電子郵件地址
   * @maxLength 255
   */
  email: string;
}

/**
 * 回應狀態
 */
export type ForgotPasswordSuccessResponseStatus =
  (typeof ForgotPasswordSuccessResponseStatus)[keyof typeof ForgotPasswordSuccessResponseStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ForgotPasswordSuccessResponseStatus = {
  success: 'success',
} as const;

export interface ForgotPasswordSuccessResponse {
  /** 回應狀態 */
  status?: ForgotPasswordSuccessResponseStatus;
  /** 成功訊息 */
  message?: string;
  /** 回應資料（此 API 無回傳資料） */
  data?: null;
}

export type ForgotPasswordValidationErrorResponseAllOf = {
  message?: unknown;
  errors?: unknown;
};

export type ForgotPasswordValidationErrorResponse = ValidationErrorResponse &
  ForgotPasswordValidationErrorResponseAllOf;

export interface RefreshTokenRequest {
  /** JWT Refresh Token */
  refresh_token: string;
}

/**
 * 回應狀態
 */
export type RefreshTokenSuccessResponseStatus =
  (typeof RefreshTokenSuccessResponseStatus)[keyof typeof RefreshTokenSuccessResponseStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const RefreshTokenSuccessResponseStatus = {
  success: 'success',
} as const;

export interface RefreshTokenSuccessResponse {
  /** 回應狀態 */
  status?: RefreshTokenSuccessResponseStatus;
  /** 成功訊息 */
  message?: string;
  data?: AuthSuccessData;
}

export type RefreshTokenValidationErrorResponseAllOf = {
  message?: unknown;
  errors?: unknown;
};

export type RefreshTokenValidationErrorResponse = ValidationErrorResponse &
  RefreshTokenValidationErrorResponseAllOf;

export type RefreshTokenBusinessErrorResponseAllOf = {
  message?: unknown;
};

export type RefreshTokenBusinessErrorResponse = BusinessErrorResponse &
  RefreshTokenBusinessErrorResponseAllOf;

export interface LoginRequest {
  /**
   * 電子郵件地址
   * @maxLength 255
   */
  email: string;
  /** 密碼 */
  password: string;
}

/**
 * 回應狀態
 */
export type LoginSuccessResponseStatus =
  (typeof LoginSuccessResponseStatus)[keyof typeof LoginSuccessResponseStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const LoginSuccessResponseStatus = {
  success: 'success',
} as const;

export interface LoginSuccessResponse {
  /** 回應狀態 */
  status?: LoginSuccessResponseStatus;
  /** 成功訊息 */
  message?: string;
  data?: AuthSuccessData;
}

export type LoginValidationErrorResponseAllOf = {
  message?: unknown;
  errors?: unknown;
};

export type LoginValidationErrorResponse = ValidationErrorResponse &
  LoginValidationErrorResponseAllOf;

export type LoginBusinessErrorResponseAllOf = {
  message?: unknown;
};

export type LoginBusinessErrorResponse = BusinessErrorResponse &
  LoginBusinessErrorResponseAllOf;

export interface RegisterRequest {
  /**
   * 使用者暱稱
   * @minLength 1
   * @maxLength 50
   */
  nick_name: string;
  /**
   * 電子郵件地址
   * @maxLength 255
   */
  email: string;
  /**
   * 密碼（至少8字元）
   * @minLength 8
   */
  password: string;
}

/**
 * 回應狀態
 */
export type RegisterSuccessResponseStatus =
  (typeof RegisterSuccessResponseStatus)[keyof typeof RegisterSuccessResponseStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const RegisterSuccessResponseStatus = {
  success: 'success',
} as const;

export interface RegisterSuccessResponse {
  /** 回應狀態 */
  status?: RegisterSuccessResponseStatus;
  /** 成功訊息 */
  message?: string;
  data?: AuthSuccessData;
}

export type RegisterValidationErrorResponseAllOf = {
  message?: unknown;
  errors?: unknown;
};

export type RegisterValidationErrorResponse = ValidationErrorResponse &
  RegisterValidationErrorResponseAllOf;

export type RegisterBusinessErrorResponseAllOf = {
  message?: unknown;
  errors?: unknown;
};

export type RegisterBusinessErrorResponse = ValidationErrorResponse &
  RegisterBusinessErrorResponseAllOf;

export interface AuthSuccessData {
  /** 使用者個人資料物件 */
  user?: UserProfile;
  /** JWT Access Token */
  access_token?: string;
  /** JWT Refresh Token */
  refresh_token?: string;
  /** Token 類型 */
  token_type?: string;
  /** Access Token 過期時間 (秒) */
  expires_in?: number;
}

/**
 * 個人資料物件
 */
export type GetProfileResponseData = {
  user?: UserProfile;
};

export interface GetProfileResponse {
  /** 回應狀態 */
  status?: string;
  /** 成功訊息 */
  message?: string;
  /** 個人資料物件 */
  data?: GetProfileResponseData;
}

/**
 * 所有欄位皆為選填，支援部分更新
 */
export interface UpdateProfileRequest {
  /**
   * 暱稱 (1-50字元，需檢查唯一性)
   * @minLength 1
   * @maxLength 50
   */
  nick_name?: string;
  /**
   * 真實姓名 (最大100字元)
   * @maxLength 100
   * @nullable
   */
  name?: string | null;
  /**
   * 生日 (YYYY-MM-DD格式)
   * @nullable
   */
  birthday?: string | null;
  /**
   * 聯絡電話 (最大20字元，支援數字、+、-、空格、括號)
   * @maxLength 20
   * @nullable
   * @pattern ^[0-9+\-\s()]+$
   */
  contact_phone?: string | null;
  /**
   * 大頭貼網址 (需為有效URL)
   * @nullable
   */
  avatar_image?: string | null;
}

/**
 * 更新後的個人資料物件
 */
export type UpdateProfileResponseData = {
  user?: UserProfile;
};

export interface UpdateProfileResponse {
  /** 回應狀態 */
  status?: string;
  /** 成功訊息 */
  message?: string;
  /** 更新後的個人資料物件 */
  data?: UpdateProfileResponseData;
}

export type UpdateProfileValidationErrorAllOf = {
  message?: unknown;
  errors?: unknown;
};

export type UpdateProfileValidationError = ValidationErrorResponse &
  UpdateProfileValidationErrorAllOf;

export type UpdateProfileBusinessErrorAllOf = {
  message?: unknown;
};

export type UpdateProfileBusinessError = BusinessErrorResponse &
  UpdateProfileBusinessErrorAllOf;

export interface DeleteProfileResponse {
  /** 回應狀態 */
  status?: string;
  /** 成功訊息 */
  message?: string;
  /** 回應資料（此 API 無回傳資料） */
  data?: null;
}

export type PostApiAuthRegister400 =
  | RegisterValidationErrorResponse
  | RegisterBusinessErrorResponse;

export type PostApiAuthLogin400 =
  | LoginValidationErrorResponse
  | LoginBusinessErrorResponse;

export type PostApiAuthRefresh400 =
  | RefreshTokenValidationErrorResponse
  | RefreshTokenBusinessErrorResponse;

export type PostApiAuthResetPassword400 =
  | ResetPasswordValidationErrorResponse
  | ResetPasswordBusinessErrorResponse;

export type PutAuthProfile400 =
  | UpdateProfileValidationError
  | UpdateProfileBusinessError;

export type GetApiPing200 = {
  message?: string;
};
