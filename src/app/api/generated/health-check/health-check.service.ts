/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Talent Match API
 * 全面重構後的 Talent Match 後端 API 文件

🆕 v2.1 新功能：整合式課程建立 API，支援同時上傳圖片和設定價格方案
 * OpenAPI spec version: 2.1.0
 */
import { HttpClient } from '@angular/common/http';
import type {
  HttpContext,
  HttpEvent,
  HttpHeaders,
  HttpParams,
  HttpResponse as AngularHttpResponse,
} from '@angular/common/http';

import { Injectable, inject } from '@angular/core';

import { Observable } from 'rxjs';

import type { GetApiPing200 } from '../talentMatchAPI.schemas';

interface HttpClientOptions {
  headers?: HttpHeaders | Record<string, string | string[]>;
  context?: HttpContext;
  params?:
    | HttpParams
    | Record<
        string,
        string | number | boolean | ReadonlyArray<string | number | boolean>
      >;
  reportProgress?: boolean;
  withCredentials?: boolean;
  credentials?: RequestCredentials;
  keepalive?: boolean;
  priority?: RequestPriority;
  cache?: RequestCache;
  mode?: RequestMode;
  redirect?: RequestRedirect;
  referrer?: string;
  integrity?: string;
  transferCache?: { includeHeaders?: string[] } | boolean;
  timeout?: number;
}

@Injectable({ providedIn: 'root' })
export class HealthCheckService {
  private readonly http = inject(HttpClient);
  /**
   * 檢查 API 服務是否正常運作
   * @summary 健康檢查
   */
  getHealthcheck(
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<string>;
  getHealthcheck(
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<string>>;
  getHealthcheck(
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<string>>;
  getHealthcheck(
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.get(`/healthcheck`, {
      responseType: 'text',
      ...options,
    });
  }
  /**
   * 測試 API 連接是否正常
   * @summary Ping 測試
   */
  getApiPing<TData = GetApiPing200>(
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  getApiPing<TData = GetApiPing200>(
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  getApiPing<TData = GetApiPing200>(
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  getApiPing<TData = GetApiPing200>(
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.get<TData>(`/api/ping`, options);
  }
}

export type GetHealthcheckClientResult = NonNullable<string>;
export type GetApiPingClientResult = NonNullable<GetApiPing200>;
