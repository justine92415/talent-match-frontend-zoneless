/**
 * Generated by orval v7.11.2 🍺
 * Do not edit manually.
 * Talent Match API
 * 全面重構後的 Talent Match 後端 API 文件

🆕 v2.1 新功能：整合式課程建立 API，支援同時上傳圖片和設定價格方案
 * OpenAPI spec version: 2.1.0
 */
import { HttpClient } from '@angular/common/http';
import type {
  HttpContext,
  HttpEvent,
  HttpHeaders,
  HttpParams,
  HttpResponse as AngularHttpResponse,
} from '@angular/common/http';

import { Injectable, inject } from '@angular/core';

import { Observable } from 'rxjs';

import type {
  CreateOrderRequest,
  CreateOrderSuccessResponse,
  OrderDetailSuccessResponse,
} from '../talentMatchAPI.schemas';

interface HttpClientOptions {
  headers?: HttpHeaders | Record<string, string | string[]>;
  context?: HttpContext;
  params?:
    | HttpParams
    | Record<
        string,
        string | number | boolean | ReadonlyArray<string | number | boolean>
      >;
  reportProgress?: boolean;
  withCredentials?: boolean;
  credentials?: RequestCredentials;
  keepalive?: boolean;
  priority?: RequestPriority;
  cache?: RequestCache;
  mode?: RequestMode;
  redirect?: RequestRedirect;
  referrer?: string;
  integrity?: string;
  transferCache?: { includeHeaders?: string[] } | boolean;
  timeout?: number;
}

@Injectable({ providedIn: 'root' })
export class OrdersService {
  private readonly http = inject(HttpClient);
  /**
 * 從用戶的購物車項目建立新訂單，成功後將清空指定的購物車項目。

**業務邏輯**：
- 驗證請求參數（購物車項目、付款方式、購買者資訊）
- 檢查購物車項目是否存在且屬於該用戶
- 計算訂單總金額
- 建立訂單記錄（狀態為 pending）
- 建立訂單項目記錄
- 清空指定的購物車項目
- 回傳完整訂單資料

 * @summary 從購物車建立訂單
 */
  postApiOrders<TData = CreateOrderSuccessResponse>(
    createOrderRequest: CreateOrderRequest,
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  postApiOrders<TData = CreateOrderSuccessResponse>(
    createOrderRequest: CreateOrderRequest,
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  postApiOrders<TData = CreateOrderSuccessResponse>(
    createOrderRequest: CreateOrderRequest,
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  postApiOrders<TData = CreateOrderSuccessResponse>(
    createOrderRequest: CreateOrderRequest,
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.post<TData>(`/api/orders`, createOrderRequest, options);
  }
  /**
 * 取得指定訂單的詳細資料，包含訂單項目清單。

**業務邏輯**：
- 驗證訂單ID格式（必須是正整數）
- 檢查訂單是否存在
- 驗證訂單所有權（只能查看自己的訂單）
- 取得訂單基本資料
- 取得訂單項目詳情
- 回傳完整訂單資料

 * @summary 取得訂單詳情
 */
  getApiOrdersOrderId<TData = OrderDetailSuccessResponse>(
    orderId: number,
    options?: HttpClientOptions & { observe?: 'body' },
  ): Observable<TData>;
  getApiOrdersOrderId<TData = OrderDetailSuccessResponse>(
    orderId: number,
    options?: HttpClientOptions & { observe: 'events' },
  ): Observable<HttpEvent<TData>>;
  getApiOrdersOrderId<TData = OrderDetailSuccessResponse>(
    orderId: number,
    options?: HttpClientOptions & { observe: 'response' },
  ): Observable<AngularHttpResponse<TData>>;
  getApiOrdersOrderId<TData = OrderDetailSuccessResponse>(
    orderId: number,
    options?: HttpClientOptions & { observe?: any },
  ): Observable<any> {
    return this.http.get<TData>(`/api/orders/${orderId}`, options);
  }
}

export type PostApiOrdersClientResult = NonNullable<CreateOrderSuccessResponse>;
export type GetApiOrdersOrderIdClientResult =
  NonNullable<OrderDetailSuccessResponse>;
